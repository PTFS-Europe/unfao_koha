package C4::AgrovocWSService;
# Generated by SOAP::Lite (v0.715) for Perl -- soaplite.com
# Copyright (C) 2000-2006 Paul Kulchenko, Byrne Reese
# -- generated at [Mon Mar 11 11:24:45 2013]
# -- generated from http://aims.fao.org/webservices/axis/services/SKOSWS?wsdl
my %methods = (
'getConceptObject' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'clsName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'OntolgoyDatabase', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getConceptObject
'getConceptInfoByURI' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'conceptURI', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getConceptInfoByURI
'suggestTerm' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'label', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'lang', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'namespace', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'parentURI', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end suggestTerm
'getListofURI' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'uriStart', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'numResult', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getListofURI
'reloadOWLModel' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end reloadOWLModel
'complexSearchByTermXML' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'searchString', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'separator', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end complexSearchByTermXML
'getTermCodeByTerm' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'term', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getTermCodeByTerm
'getTermsByClassName' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'className', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'descriptor', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'status', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getTermsByClassName
'getConceptInfoByTermcodeXML' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'searchTerm', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getConceptInfoByTermcodeXML
'getURIByTermAndLangXML' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'term', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'searchMode', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'lang', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getURIByTermAndLangXML
'getDefinitions' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'termcode', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'languagecode', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getDefinitions
'getTermsByCodesAndLanguage' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'termcode', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'codeName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'lang', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getTermsByCodesAndLanguage
'simpleSearchByMode2' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'searchString', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'searchmode', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'separator', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end simpleSearchByMode2
'getTermCodeByTermXML' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'term', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getTermCodeByTermXML
'getTermsByURI' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'conceptURI', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'lang', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'descriptor', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'status', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getTermsByURI
'getLanguageCode' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'localLang', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getLanguageCode
'getConceptRelationshipList' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'clsName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'OntolgoyDatabase', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getConceptRelationshipList
'getDefinitionsByClassName' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'className', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'outputlang', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getDefinitionsByClassName
'getDefinitionsByURI' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'conceptURI', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'outputlang', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getDefinitionsByURI
'getAgrovocCSLanguages' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
    ], # end parameters
  }, # end getAgrovocCSLanguages
'getConceptInfoByTermcode' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'termCode', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getConceptInfoByTermcode
'getStatusConcept' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'conceptURI', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'lang', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getStatusConcept
'getFullAuthority' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'searchString', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'searchMode', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'lang', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getFullAuthority
'getAuthoritySegment' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'integerFrom', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'integerTo', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getAuthoritySegment
'getConceptByKeyword' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'searchString', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'searchMode', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'lang', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getConceptByKeyword
'getDataTypeRelationship' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getDataTypeRelationship
'getAllLabelsByTermcode2' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'termcode', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'separator', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getAllLabelsByTermcode2
'getTermByLanguage' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'termcode', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'language', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getTermByLanguage
'getTermCodeByTermAndLangXML' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'term', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'lang', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'codeName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getTermCodeByTermAndLangXML
'getConceptByRelationshipValue' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'relationURI', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'searchMode', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'lang', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getConceptByRelationshipValue
'getAgrovocCSModules' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
    ], # end parameters
  }, # end getAgrovocCSModules
'getConceptInfoByClassName' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'conceptName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getConceptInfoByClassName
'getStatusTerm' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'termCode', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'codeName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'lang', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getStatusTerm
'getRejectedConcepts' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'authorityFile', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'dateFrom', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'dateTo', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'integerFrom', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'integerTo', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getRejectedConcepts
'simpleSearchByModeLangXML' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'searchString', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'searchMode', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'lang', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'outputLang', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end simpleSearchByModeLangXML
'getConceptByURI' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'conceptURI', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getConceptByURI
'getRelatedValuesFromConceptURIRelationURI' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'conceptURI', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'relationURI', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getRelatedValuesFromConceptURIRelationURI
'searchByModeLangScopeXML' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'searchString', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'searchMode', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'lang', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'outputLang', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'scopeid', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end searchByModeLangScopeXML
'getAgrovocCSLanguagesExpand' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
    ], # end parameters
  }, # end getAgrovocCSLanguagesExpand
'getAvailableCode' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getAvailableCode
'getStatusList' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getStatusList
'getObjectPropertyRelationship' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getObjectPropertyRelationship
'getPossibleRelationsFromConceptURI' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'conceptURI', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'relationType', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getPossibleRelationsFromConceptURI
'getTermExpansion' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'searchString', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'searchMode', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'lang', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getTermExpansion
'getCodesByURI' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'Ontology', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'ConceptURI', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'CodeName', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getCodesByURI
'getConceptByKeyword2' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'searchString', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'searchMode', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'lang', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'outlang', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getConceptByKeyword2
'getLatestUpdates' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'ontologyName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'dateFrom', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'dateTo', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getLatestUpdates
'getAllTermInSubClass' => {
    endpoint => 'http://aims.fao.org/webservices/axis/services/SKOSWS',
    soapaction => '',
    namespace => 'http://aos.aims.fao.org',
    parameters => [
      SOAP::Data->new(name => 'clsName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'OntolgoyDatabase', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end getAllTermInSubClass
); # end my %methods

use SOAP::Lite;
use Exporter;
use Carp ();

use vars qw(@ISA $AUTOLOAD @EXPORT_OK %EXPORT_TAGS);
@ISA = qw(Exporter SOAP::Lite);
@EXPORT_OK = (keys %methods);
%EXPORT_TAGS = ('all' => [@EXPORT_OK]);

sub _call {
    my ($self, $method) = (shift, shift);
    my $name = UNIVERSAL::isa($method => 'SOAP::Data') ? $method->name : $method;
    my %method = %{$methods{$name}};
    $self->proxy($method{endpoint} || Carp::croak "No server address (proxy) specified")
        unless $self->proxy;
    my @templates = @{$method{parameters}};
    my @parameters = ();
    foreach my $param (@_) {
        if (@templates) {
            my $template = shift @templates;
            my ($prefix,$typename) = SOAP::Utils::splitqname($template->type);
            my $method = 'as_'.$typename;
            # TODO - if can('as_'.$typename) {...}
            my $result = $self->serializer->$method($param, $template->name, $template->type, $template->attr);
            push(@parameters, $template->value($result->[2]));
        }
        else {
            push(@parameters, $param);
        }
    }
    $self->endpoint($method{endpoint})
       ->ns($method{namespace})
       ->on_action(sub{qq!"$method{soapaction}"!});
  $self->serializer->register_ns("http://schemas.xmlsoap.org/wsdl/soap/","wsdlsoap");
  $self->serializer->register_ns("http://schemas.xmlsoap.org/wsdl/","wsdl");
  $self->serializer->register_ns("http://aos.aims.fao.org","intf");
  $self->serializer->register_ns("http://aos.aims.fao.org","impl");
  $self->serializer->register_ns("http://xml.apache.org/xml-soap","apachesoap");
  $self->serializer->register_ns("http://www.w3.org/2001/XMLSchema","xsd");
    my $som = $self->SUPER::call($method => @parameters);
    if ($self->want_som) {
        return $som;
    }
    UNIVERSAL::isa($som => 'SOAP::SOM') ? wantarray ? $som->paramsall : $som->result : $som;
}

sub BEGIN {
    no strict 'refs';
    for my $method (qw(want_som)) {
        my $field = '_' . $method;
        *$method = sub {
            my $self = shift->new;
            @_ ? ($self->{$field} = shift, return $self) : return $self->{$field};
        }
    }
}
no strict 'refs';
for my $method (@EXPORT_OK) {
    my %method = %{$methods{$method}};
    *$method = sub {
        my $self = UNIVERSAL::isa($_[0] => __PACKAGE__)
            ? ref $_[0]
                ? shift # OBJECT
                # CLASS, either get self or create new and assign to self
                : (shift->self || __PACKAGE__->self(__PACKAGE__->new))
            # function call, either get self or create new and assign to self
            : (__PACKAGE__->self || __PACKAGE__->self(__PACKAGE__->new));
        $self->_call($method, @_);
    }
}

sub AUTOLOAD {
    my $method = substr($AUTOLOAD, rindex($AUTOLOAD, '::') + 2);
    return if $method eq 'DESTROY' || $method eq 'want_som';
    die "Unrecognized method '$method'. List of available method(s): @EXPORT_OK\n";
}

1;
